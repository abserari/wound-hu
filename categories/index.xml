<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wound</title>
    <link>/categories/</link>
    <description>Recent content on Wound</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Dec 2018 12:55:29 +0800</lastBuildDate>
    
	<atom:link href="/categories/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>最长公共前缀</title>
      <link>/blog/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</link>
      <pubDate>Sat, 08 Dec 2018 12:55:29 +0800</pubDate>
      
      <guid>/blog/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</guid>
      <description> 问题描述 编写一个函数来查找字符串数组中的最长公共前缀。
如果不存在公共前缀，返回空字符串 &amp;quot;&amp;quot;。
示例 1 输入: [&amp;quot;flower&amp;quot;,&amp;quot;flow&amp;quot;,&amp;quot;flight&amp;quot;] 输出: &amp;quot;fl&amp;quot;  示例 2 输入: [&amp;quot;dog&amp;quot;,&amp;quot;racecar&amp;quot;,&amp;quot;car&amp;quot;] 输出: &amp;quot;&amp;quot; 解释: 输入不存在公共前缀。  说明 所有输入只包含小写字母 a-z 。
思路 按需匹配即可，遇到不符即可立即返回
实现 func longestCommonPrefix(strs []string) string { short := shortest(strs) for i, r := range short { for j := 0; j &amp;lt; len(strs); j++ { if strs[j][i] != byte(r) { return strs[j][:i] } } } return short } func shortest(strs []string) string { if len(strs) == 0 { return &amp;quot;&amp;quot; } res := strs[0] for _, s := range strs { if len(res) &amp;gt; len(s) { res = s } } return res }  </description>
    </item>
    
    <item>
      <title>Friends&#39; Cool Thing </title>
      <link>/itemized/item1/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item1/</guid>
      <description> Coooool&amp;#39;s Friends </description>
    </item>
    
  </channel>
</rss>